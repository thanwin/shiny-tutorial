install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
list.files('E:\R_Coursera\week2\specdata')
list.files("E:\R_Coursera\week2\specdata")
list.files("E:/R_Coursera/week2/specdata")
print doc
print(doc)
}
{
docs <- list.files("E:/R_Coursera/week2/specdata")
list.files("E:/R_Coursera/week2/specdata")
for (doc in docs)
docs <- list.files("E:/R_Coursera/week2/specdata")
for (doc in docs)
{
print(doc)
}
library('swirl')
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
c
?c
z
c(z, 555,z)
z * 2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 +1000
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Than Win")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "_")
paste(LETTERS, 1:4, sep = "-")
library('swirl')
swirl()
my_vector < c(1:20)
my_vector <- c(1:20)
my_vector <- [1:20]
my_vector <- vector([1:20])
my_vector <- vector(1:20)
my_vector <- matrix(1:20)
my_vector[1:20]
my_vector <- c(1:20)
info()
play()
my_vector <- c(1:20)
my_vector
class(my_vector)
my_vector <- int[1:20]
my_vector <- vector[1:20]
my_vector <- vector([1:20])
my_vector <- vector(c(1:20))
my_vector <- vector()
class(my_vector)
my_vector <- vector(integer)
my_vector <- vector(int)
my_vector <- seq(1:20)
my_vector
nxt()
my_vector <- seq(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
?identical
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
if TRUE == TRUE
if TRUE = TRUE
if (TRUE == TRUE)
;
TRUE = TRUE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 == 7)
!(5 != 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat = sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$lanimate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
?head
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
library('swirl')
swirl()
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnom
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, c(10))
rpois(5, 10
)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 < Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%b %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units="days")
a <- makeCacheMatrix()
source('E:/R_Coursera/week3/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix()
a$set(matrix(1:4,2,2))
cacheSolve(a)
source('E:/R_Coursera/week3/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix()
a$set(matrix(1:4,2,2))
cacheSolve(a)
source('E:/R_Coursera/week3/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix()
a$set(matrix(1:4,2,2))
cacheSolve(a)
?rnorm
?rpois
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
x <- rbinom(100, 1, 05)
x <- rbinom(100, 1, 0.5)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
system.time()
system.time(summary)
system.time(summary(y))
system.time(readLines("http://www.jsph.edu"))
system.time(readLines("http://www.jhsph.edu"))
system.time(readLines("http://www.jhsph.edu"))
?Rprof
Rprof(system.time(readLines("http://www.jhsph.edu")))
?lapply
x <- list(a=1:5, b=rnorm(10))
x
lappply(x, mean)
lapply(x, mean)
version()
find.package("devtools")
install.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
install.packages("Rtools")
library(devtools)
find_rtools()
getwd()
path = "C:/Users/Than Win/Documents/GitHub/shiny-tutorial/lesson-1"
getwd()
setwd(path)
getwd()
library(shiny)
runApp("my_app")
runApp("App-1", display.mode="Showcase")
runApp("App-1", display.mode = "Showcase")
runApp("App-1", display.mode = “showcase”)
runApp("App-1", display.mode = "showcase")
getwd()
path = "C:/Users/Than Win/Documents/GitHub/shiny-tutorial/lesson-2"
runApp("App-1")
getwd()
path = "C:/Users/Than Win/Documents/GitHub/shiny-tutorial/lesson-2"
setwd(path)
runApp("App-1")
runApp("App-2")
runApp("App-3")
runApp("App-4")
runApp("App-5")
runApp("App-5")
runApp("App-6")
runApp("App-7")
runApp("App-7")
runApp("App-7")
path = "C:/Users/Than Win/Documents/GitHub/shiny-tutorial/lesson-3"
setwd(path)
runApp("App-1")
runApp("App-2")
path = "C:/Users/Than Win/Documents/GitHub/shiny-tutorial/lesson-4"
runApp("App-1")
setwd(path)
runApp("App-1")
runApp("App-1")
runApp("App-2")
